SNESDef.asm:20:1: kBaseSize_32x64 = 2
SNESDef.asm:15:1: kSFlipX = 64
SNESDef.asm:16:1: kSFlipY = 128
master.asm:114:1: Bank80 = $808000
Bank80.asm:6:1: Bank80.kVRAM = $808000
Bank80.asm:7:2: Bank80.kVRAM.gameScreen = 0
Bank80.asm:8:2: Bank80.kVRAM.font = 2048
Bank80.asm:9:2: Bank80.kVRAM.gameChars = 4096
Bank80.asm:257:1: Bank80.mWH1 = $800045
Bank80.asm:180:1: Bank80.MainLoop = $808138
Bank80.asm:272:1: Bank80.DMAZero = $80818d
Bank80.asm:255:1: Bank80.mWOBJSEL = $800041
Bank80.asm:235:1: Bank80.mINIDISP = $800019
Bank80.asm:646:1: Bank80.map_retreatPointersLeftEdge_ra8 = $8085ad
Bank80.asm:647:1: Bank80.map_retreatPointersLeftEdge_ra8._ASSERT_JSR = $8085ad
Bank80.asm:657:2: Bank80.map_retreatPointersLeftEdge_ra8._next = $8085be
Bank80.asm:236:1: Bank80.mOBSEL = $80001b
Bank80.asm:381:1: Bank80.MapVRAMRight = $0011
master.asm:122:9: Bank80.MapVRAMRight.lo = $0011
master.asm:123:9: Bank80.MapVRAMRight.hi = $0012
Bank80.asm:261:1: Bank80.mOBJLOG = $80004d
Bank80.asm:264:1: Bank80.mTMW = $800053
Bank80.asm:231:1: Bank80.JoyHoldCounter = $000a
Bank80.asm:383:1: Bank80.ScreenXOffset = $0015
master.asm:122:9: Bank80.ScreenXOffset.lo = $0015
master.asm:123:9: Bank80.ScreenXOffset.hi = $0016
Bank80.asm:239:1: Bank80.mBG1SC = $800021
Bank80.asm:268:1: Bank80.mNMITIMEN = $80005b
Bank80.asm:246:1: Bank80.mBG1VOFS = $80002f
master.asm:122:9: Bank80.mBG1VOFS.lo = $80002f
master.asm:123:9: Bank80.mBG1VOFS.hi = $800030
Bank80.asm:438:1: Bank80.map_fillColumnBufferLeftEdge_xx = $808252
Bank80.asm:439:1: Bank80.map_fillColumnBufferLeftEdge_xx._ASSERT_JSR = $808252
Bank80.asm:447:1: Bank80.map_fillColumnBufferLeftEdge_xx._justStore = $808262
Bank80.asm:253:1: Bank80.mW12SEL = $80003d
Bank80.asm:394:1: Bank80.MapData = $81a020
Bank80.asm:399:3: Bank80.MapData.Row1 = $81a020
Bank80.asm:400:3: Bank80.MapData.Row2 = $81a113
Bank80.asm:401:3: Bank80.MapData.Row3 = $81a206
Bank80.asm:402:3: Bank80.MapData.Row4 = $81a2f9
Bank80.asm:403:3: Bank80.MapData.Row5 = $81a3ec
Bank80.asm:404:3: Bank80.MapData.Row6 = $81a4df
Bank80.asm:395:2: Bank80.MapData.kRowLen = 243
Bank80.asm:263:1: Bank80.mTS = $800051
Bank80.asm:388:1: Bank80.MapColumnBuffer = $80005d
Bank80.asm:378:1: Bank80.MapSubCharLeft = $000d
Bank80.asm:352:1: Bank80.dmaLevelChars_xx = $808204
Bank80.asm:353:1: Bank80.dmaLevelChars_xx._ASSERT_JSR = $808204
Bank80.asm:349:1: Bank80.SpottyChars = $818020
Bank80.asm:247:1: Bank80.mBG2HOFS = $800031
master.asm:122:9: Bank80.mBG2HOFS.lo = $800031
master.asm:123:9: Bank80.mBG2HOFS.hi = $800032
Bank80.asm:390:1: Bank80.MapStackStore = $80009d
Bank80.asm:418:1: Bank80.map_InitEmptyScreen_xx = $808232
Bank80.asm:419:1: Bank80.map_InitEmptyScreen_xx._ASSERT_JSR = $808232
Bank80.asm:548:1: Bank80.dmaColumn_xx = $808527
Bank80.asm:379:1: Bank80.MapSubCharRight = $000e
Bank80.asm:238:1: Bank80.mMOSIAC = $80001f
Bank80.asm:478:1: Bank80.map_FillColumBufferEdgeCommon = $808296
Bank80.asm:528:1: Bank80.map_FillColumBufferEdgeCommon._col4 = $808485
Bank80.asm:542:1: Bank80.map_FillColumBufferEdgeCommon._exit = $808522
Bank80.asm:483:1: Bank80.map_FillColumBufferEdgeCommon._col1 = $8082a5
Bank80.asm:498:1: Bank80.map_FillColumBufferEdgeCommon._col2 = $808345
Bank80.asm:513:1: Bank80.map_FillColumBufferEdgeCommon._col3 = $8083e5
Bank80.asm:248:1: Bank80.mBG2VOFS = $800033
master.asm:122:9: Bank80.mBG2VOFS.lo = $800033
master.asm:123:9: Bank80.mBG2VOFS.hi = $800034
Bank80.asm:241:1: Bank80.mBG3SC = $800025
Bank80.asm:262:1: Bank80.mTM = $80004f
Bank80.asm:24:1: Bank80.RESETHi = $80800b
Bank80.asm:237:1: Bank80.mBGMODE = $80001d
Bank80.asm:240:1: Bank80.mBG2SC = $800023
Bank80.asm:228:1: Bank80.JoyHi = $0007
Bank80.asm:227:1: Bank80.NMIReadyNF = $0006
Bank80.asm:244:1: Bank80.mBG23NBA = $80002b
Bank80.asm:250:1: Bank80.mBG3VOFS = $800037
master.asm:122:9: Bank80.mBG3VOFS.lo = $800037
master.asm:123:9: Bank80.mBG3VOFS.hi = $800038
Bank80.asm:589:1: Bank80.map_advancePointersRightEdge_ra8 = $80855c
Bank80.asm:590:1: Bank80.map_advancePointersRightEdge_ra8._ASSERT_JSR = $80855c
Bank80.asm:600:2: Bank80.map_advancePointersRightEdge_ra8._next = $80856d
Bank80.asm:260:1: Bank80.mWBGLOG = $80004b
Bank80.asm:256:1: Bank80.mWH0 = $800043
Bank80.asm:376:1: Bank80.MapBlockIndexLeft = $000b
Bank80.asm:258:1: Bank80.mWH2 = $800047
Bank80.asm:259:1: Bank80.mWH3 = $800049
Bank80.asm:408:1: Bank80.BlockData = $81a5d2
Bank80.asm:412:2: Bank80.BlockData.col4 = $81b292
Bank80.asm:410:2: Bank80.BlockData.col2 = $81aa12
Bank80.asm:411:2: Bank80.BlockData.col3 = $81ae52
Bank80.asm:409:2: Bank80.BlockData.col1 = $81a5d2
Bank80.asm:321:1: Bank80.justRTI = $8081dd
Bank80.asm:627:1: Bank80.map_retreatPointersRightEdge_ra8 = $808592
Bank80.asm:628:1: Bank80.map_retreatPointersRightEdge_ra8._ASSERT_JSR = $808592
Bank80.asm:638:2: Bank80.map_retreatPointersRightEdge_ra8._next = $8085a3
Bank80.asm:329:1: Bank80.dmaPalletes_xx = $8081de
Bank80.asm:330:1: Bank80.dmaPalletes_xx._ASSERT_JSR = $8081de
Bank80.asm:254:1: Bank80.mW34SEL = $80003f
Bank80.asm:276:1: Bank80.NMIFast = $808193
Bank80.asm:288:1: Bank80.NMIFast._ready = $8081a4
Bank80.asm:299:1: Bank80.NMIFast._noColumnDMA = $8081b5
Bank80.asm:249:1: Bank80.mBG3HOFS = $800035
master.asm:122:9: Bank80.mBG3HOFS.lo = $800035
master.asm:123:9: Bank80.mBG3HOFS.hi = $800036
Bank80.asm:18:1: Bank80.RESET = $808000
Bank80.asm:48:1: Bank80.InitSNESAndMirror = $808041
Bank80.asm:157:1: Bank80.InitSNESAndMirror._loop = $808109
Bank80.asm:326:1: Bank80.SpottyPal = $818000
Bank80.asm:35:1: Bank80.ClearWRAM = $80801d
Bank80.asm:608:1: Bank80.map_advancePointersLeftEdge_ra8 = $808577
Bank80.asm:609:1: Bank80.map_advancePointersLeftEdge_ra8._ASSERT_JSR = $808577
Bank80.asm:619:2: Bank80.map_advancePointersLeftEdge_ra8._next = $808588
Bank80.asm:242:1: Bank80.mBG4SC = $800027
Bank80.asm:384:1: Bank80.MapBufferTarget = $0017
master.asm:122:9: Bank80.MapBufferTarget.lo = $0017
master.asm:123:9: Bank80.MapBufferTarget.hi = $0018
Bank80.asm:265:1: Bank80.mTSW = $800055
Bank80.asm:251:1: Bank80.mBG4HOFS = $800039
master.asm:122:9: Bank80.mBG4HOFS.lo = $800039
master.asm:123:9: Bank80.mBG4HOFS.hi = $80003a
Bank80.asm:274:1: Bank80.NMI = $80818f
Bank80.asm:230:1: Bank80.JoyHiEvent = $0009
Bank80.asm:245:1: Bank80.mBG1HOFS = $80002d
master.asm:122:9: Bank80.mBG1HOFS.lo = $80002d
master.asm:123:9: Bank80.mBG1HOFS.hi = $80002e
Bank80.asm:377:1: Bank80.MapBlockIndexRight = $000c
Bank80.asm:382:1: Bank80.MapTempWord = $0013
master.asm:122:9: Bank80.MapTempWord.lo = $0013
master.asm:123:9: Bank80.MapTempWord.hi = $0014
Bank80.asm:182:1: Bank80.MainLoopWait = $80813a
Bank80.asm:204:1: Bank80.MainLoopWait._noRight = $808166
Bank80.asm:222:1: Bank80.MainLoopWait._noLeft = $80818a
Bank80.asm:223:1: Bank80.MainLoopWait._noHold = $80818a
Bank80.asm:389:1: Bank80.MapColumnBufferEnd = $80009c
Bank80.asm:380:1: Bank80.MapVRAMLeft = $000f
master.asm:122:9: Bank80.MapVRAMLeft.lo = $000f
master.asm:123:9: Bank80.MapVRAMLeft.hi = $0010
Bank80.asm:252:1: Bank80.mBG4VOFS = $80003b
master.asm:122:9: Bank80.mBG4VOFS.lo = $80003b
master.asm:123:9: Bank80.mBG4VOFS.hi = $80003c
Bank80.asm:266:1: Bank80.mCOLDATA = $800057
Bank80.asm:267:1: Bank80.mSETINI = $800059
Bank80.asm:459:1: Bank80.map_fillColumnBufferRightEdge_xx = $808275
Bank80.asm:460:1: Bank80.map_fillColumnBufferRightEdge_xx._ASSERT_JSR = $808275
Bank80.asm:468:1: Bank80.map_fillColumnBufferRightEdge_xx._justStore = $808285
Bank80.asm:243:1: Bank80.mBG12NBA = $800029
Bank80.asm:229:1: Bank80.JoyHiOld = $0008
SNESDef.asm:19:1: kBaseSize_64x32 = 1
master.asm:20:1: DataBankStart = $818000
master.asm:42:1: gSharedRamStart = $0019
SNESDef.asm:18:1: kBaseSize_32x32 = 0
master.asm:59:5: ZPTemp6 = $0005
master.asm:58:5: ZPTemp5 = $0004
master.asm:57:5: ZPTemp4 = $0003
master.asm:56:5: ZPTemp3 = $0002
master.asm:55:5: ZPTemp2 = $0001
master.asm:54:5: ZPTemp1 = $0000
SNESDef.asm:13:1: kSPal_7 = 14
SNESDef.asm:12:1: kSPal_6 = 12
SNESDef.asm:11:1: kSPal_5 = 10
SNESDef.asm:10:1: kSPal_4 = 8
SNESDef.asm:9:1: kSPal_3 = 6
SNESDef.asm:8:1: kSPal_2 = 4
SNESDef.asm:7:1: kSPal_1 = 2
SNESDef.asm:6:1: kSPal_0 = 0
SNESDef.asm:4:1: kSPri_3 = 48
SNESDef.asm:3:1: kSPri_2 = 32
SNESDef.asm:2:1: kSPri_1 = 16
SNESDef.asm:1:1: kSPri_0 = 0
master.asm:122:9: HLWord.lo = 0
master.asm:123:9: HLWord.hi = 1
SNESDef.asm:21:1: kBaseSize_64x64 = 3
master.asm:140:9: HLBLong.hiWord = 1
master.asm:131:9: HLBLong.hi = 1
master.asm:139:9: HLBLong.dummy2 = 0
master.asm:130:9: HLBLong.lo = 0
master.asm:136:9: HLBLong.dummy1 = 2
master.asm:135:9: HLBLong.loWord = 0
master.asm:132:9: HLBLong.bank = 2
