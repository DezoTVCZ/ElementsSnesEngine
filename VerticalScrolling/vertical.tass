SNESDef.asm:20:1: kBaseSize_32x64 = 2
SNESDef.asm:15:1: kSFlipX = 64
SNESDef.asm:16:1: kSFlipY = 128
master.asm:114:1: Bank80 = $808000
Bank80.asm:6:1: Bank80.kVRAM = $808000
Bank80.asm:7:2: Bank80.kVRAM.gameScreen = 0
Bank80.asm:8:2: Bank80.kVRAM.font = 2048
Bank80.asm:9:2: Bank80.kVRAM.gameChars = 4096
Bank80.asm:181:1: Bank80.MainLoop = $808139
Bank80.asm:229:1: Bank80.JoyHi = $0007
Bank80.asm:273:1: Bank80.DMAZero = $808192
Bank80.asm:256:1: Bank80.mWOBJSEL = $800043
Bank80.asm:474:1: Bank80.map_fillRowBufferEdgeCommon = $808293
Bank80.asm:507:1: Bank80.map_fillRowBufferEdgeCommon._Row4 = $8085d9
Bank80.asm:517:1: Bank80.map_fillRowBufferEdgeCommon._Row5 = $8086ec
Bank80.asm:487:1: Bank80.map_fillRowBufferEdgeCommon._Row2 = $8083b3
Bank80.asm:497:1: Bank80.map_fillRowBufferEdgeCommon._Row3 = $8084c6
Bank80.asm:477:1: Bank80.map_fillRowBufferEdgeCommon._Row1 = $8082a0
Bank80.asm:526:1: Bank80.map_fillRowBufferEdgeCommon._exit = $8087fc
Bank80.asm:236:1: Bank80.mINIDISP = $80001b
Bank80.asm:237:1: Bank80.mOBSEL = $80001d
Bank80.asm:262:1: Bank80.mOBJLOG = $80004f
Bank80.asm:265:1: Bank80.mTMW = $800055
Bank80.asm:384:1: Bank80.MapVRAMTop = $0011
master.asm:122:9: Bank80.MapVRAMTop.lo = $0011
master.asm:123:9: Bank80.MapVRAMTop.hi = $0012
Bank80.asm:381:1: Bank80.MapBlockIndexBot = $000d
Bank80.asm:240:1: Bank80.mBG1SC = $800023
Bank80.asm:269:1: Bank80.mNMITIMEN = $80005d
Bank80.asm:245:1: Bank80.mBG23NBA = $80002d
Bank80.asm:383:1: Bank80.MapSubRowBot = $0010
Bank80.asm:254:1: Bank80.mW12SEL = $80003f
Bank80.asm:392:1: Bank80.MapColumnBuffer = $80005f
Bank80.asm:356:1: Bank80.dmaLevelChars_xx = $808210
Bank80.asm:357:1: Bank80.dmaLevelChars_xx._ASSERT_JSR = $808210
Bank80.asm:353:1: Bank80.SpottyChars = $818020
Bank80.asm:248:1: Bank80.mBG2HOFS = $800033
master.asm:122:9: Bank80.mBG2HOFS.lo = $800033
master.asm:123:9: Bank80.mBG2HOFS.hi = $800034
Bank80.asm:394:1: Bank80.MapStackStore = $8000af
Bank80.asm:420:1: Bank80.map_InitEmptyScreen_xx = $80823e
Bank80.asm:421:1: Bank80.map_InitEmptyScreen_xx._ASSERT_JSR = $80823e
Bank80.asm:264:1: Bank80.mTS = $800053
Bank80.asm:239:1: Bank80.mMOSIAC = $800021
Bank80.asm:398:1: Bank80.MapData = $819f20
Bank80.asm:399:2: Bank80.MapData.kColLen = 512
Bank80.asm:407:2: Bank80.MapData.col8 = $81ad20
Bank80.asm:405:2: Bank80.MapData.col6 = $81a920
Bank80.asm:406:2: Bank80.MapData.col7 = $81ab20
Bank80.asm:403:2: Bank80.MapData.col4 = $81a520
Bank80.asm:404:2: Bank80.MapData.col5 = $81a720
Bank80.asm:401:2: Bank80.MapData.col2 = $81a120
Bank80.asm:402:2: Bank80.MapData.col3 = $81a320
Bank80.asm:400:2: Bank80.MapData.col1 = $819f20
Bank80.asm:385:1: Bank80.MapVRAMBot = $0013
master.asm:122:9: Bank80.MapVRAMBot.lo = $0013
master.asm:123:9: Bank80.MapVRAMBot.hi = $0014
Bank80.asm:249:1: Bank80.mBG2VOFS = $800035
master.asm:122:9: Bank80.mBG2VOFS.lo = $800035
master.asm:123:9: Bank80.mBG2VOFS.hi = $800036
Bank80.asm:242:1: Bank80.mBG3SC = $800027
Bank80.asm:620:1: Bank80.map_retreatPointersTopEdge_ra16 = $808878
Bank80.asm:621:1: Bank80.map_retreatPointersTopEdge_ra16._ASSERT_JSR = $808878
Bank80.asm:632:2: Bank80.map_retreatPointersTopEdge_ra16._next = $80888b
Bank80.asm:263:1: Bank80.mTM = $800051
Bank80.asm:380:1: Bank80.MapBlockIndexTop = $000b
Bank80.asm:24:1: Bank80.RESETHi = $80800b
Bank80.asm:238:1: Bank80.mBGMODE = $80001f
Bank80.asm:241:1: Bank80.mBG2SC = $800025
Bank80.asm:578:1: Bank80.map_advancePointersTopEdge_ra16 = $808836
Bank80.asm:579:1: Bank80.map_advancePointersTopEdge_ra16._ASSERT_JSR = $808836
Bank80.asm:590:2: Bank80.map_advancePointersTopEdge_ra16._next = $808849
Bank80.asm:382:1: Bank80.MapSubRowTop = $000f
Bank80.asm:228:1: Bank80.NMIReadyNF = $0006
Bank80.asm:251:1: Bank80.mBG3VOFS = $800039
master.asm:122:9: Bank80.mBG3VOFS.lo = $800039
master.asm:123:9: Bank80.mBG3VOFS.hi = $80003a
Bank80.asm:261:1: Bank80.mWBGLOG = $80004d
Bank80.asm:247:1: Bank80.mBG1VOFS = $800031
master.asm:122:9: Bank80.mBG1VOFS.lo = $800031
master.asm:123:9: Bank80.mBG1VOFS.hi = $800032
Bank80.asm:442:1: Bank80.map_fillRowBufferTopEdge_xx = $808265
Bank80.asm:443:1: Bank80.map_fillRowBufferTopEdge_xx._ASSERT_JSR = $808265
Bank80.asm:257:1: Bank80.mWH0 = $800045
Bank80.asm:258:1: Bank80.mWH1 = $800047
Bank80.asm:259:1: Bank80.mWH2 = $800049
Bank80.asm:260:1: Bank80.mWH3 = $80004b
Bank80.asm:409:1: Bank80.BlockData = $81af20
Bank80.asm:410:2: Bank80.BlockData.row1 = $81af20
Bank80.asm:411:2: Bank80.BlockData.row2 = $81b1c8
Bank80.asm:412:2: Bank80.BlockData.row3 = $81b470
Bank80.asm:413:2: Bank80.BlockData.row4 = $81b718
Bank80.asm:414:2: Bank80.BlockData.row5 = $81b9c0
Bank80.asm:325:1: Bank80.justRTI = $8081e9
Bank80.asm:333:1: Bank80.dmaPalletes_xx = $8081ea
Bank80.asm:334:1: Bank80.dmaPalletes_xx._ASSERT_JSR = $8081ea
Bank80.asm:255:1: Bank80.mW34SEL = $800041
Bank80.asm:277:1: Bank80.NMIFast = $808198
Bank80.asm:289:1: Bank80.NMIFast._ready = $8081a9
Bank80.asm:300:1: Bank80.NMIFast._noColumnDMA = $8081ba
Bank80.asm:250:1: Bank80.mBG3HOFS = $800037
master.asm:122:9: Bank80.mBG3HOFS.lo = $800037
master.asm:123:9: Bank80.mBG3HOFS.hi = $800038
Bank80.asm:18:1: Bank80.RESET = $808000
Bank80.asm:599:1: Bank80.map_advancePointersBotEdge_ra16 = $808857
Bank80.asm:600:1: Bank80.map_advancePointersBotEdge_ra16._ASSERT_JSR = $808857
Bank80.asm:611:2: Bank80.map_advancePointersBotEdge_ra16._next = $80886a
Bank80.asm:458:1: Bank80.map_fillRowBufferBotEdge_xx = $80827d
Bank80.asm:459:1: Bank80.map_fillRowBufferBotEdge_xx._ASSERT_JSR = $80827d
Bank80.asm:330:1: Bank80.SpottyPal = $818000
Bank80.asm:35:1: Bank80.ClearWRAM = $80801d
Bank80.asm:243:1: Bank80.mBG4SC = $800029
Bank80.asm:641:1: Bank80.map_retreatPointersBotEdge_ra16 = $808899
Bank80.asm:642:1: Bank80.map_retreatPointersBotEdge_ra16._ASSERT_JSR = $808899
Bank80.asm:653:2: Bank80.map_retreatPointersBotEdge_ra16._next = $8088ac
Bank80.asm:554:1: Bank80.dmaRow_xx = $808801
Bank80.asm:48:1: Bank80.InitSNESAndMirror = $808041
Bank80.asm:157:1: Bank80.InitSNESAndMirror._loop = $808109
Bank80.asm:388:1: Bank80.MapBufferTarget = $0019
master.asm:122:9: Bank80.MapBufferTarget.lo = $0019
master.asm:123:9: Bank80.MapBufferTarget.hi = $001a
Bank80.asm:266:1: Bank80.mTSW = $800057
Bank80.asm:252:1: Bank80.mBG4HOFS = $80003b
master.asm:122:9: Bank80.mBG4HOFS.lo = $80003b
master.asm:123:9: Bank80.mBG4HOFS.hi = $80003c
Bank80.asm:275:1: Bank80.NMI = $808194
Bank80.asm:231:1: Bank80.JoyHiEvent = $0009
Bank80.asm:246:1: Bank80.mBG1HOFS = $80002f
master.asm:122:9: Bank80.mBG1HOFS.lo = $80002f
master.asm:123:9: Bank80.mBG1HOFS.hi = $800030
Bank80.asm:387:1: Bank80.ScreenYOffset = $0017
master.asm:122:9: Bank80.ScreenYOffset.lo = $0017
master.asm:123:9: Bank80.ScreenYOffset.hi = $0018
Bank80.asm:386:1: Bank80.MapTempWord = $0015
master.asm:122:9: Bank80.MapTempWord.lo = $0015
master.asm:123:9: Bank80.MapTempWord.hi = $0016
Bank80.asm:183:1: Bank80.MainLoopWait = $80813b
Bank80.asm:223:1: Bank80.MainLoopWait._noUp = $80818f
Bank80.asm:205:1: Bank80.MainLoopWait._noDown = $808169
Bank80.asm:224:1: Bank80.MainLoopWait._noHold = $80818f
Bank80.asm:393:1: Bank80.MapColumnBufferEnd = $8000ae
Bank80.asm:232:1: Bank80.JoyHoldCounter = $000a
Bank80.asm:253:1: Bank80.mBG4VOFS = $80003d
master.asm:122:9: Bank80.mBG4VOFS.lo = $80003d
master.asm:123:9: Bank80.mBG4VOFS.hi = $80003e
Bank80.asm:267:1: Bank80.mCOLDATA = $800059
Bank80.asm:268:1: Bank80.mSETINI = $80005b
Bank80.asm:244:1: Bank80.mBG12NBA = $80002b
Bank80.asm:230:1: Bank80.JoyHiOld = $0008
SNESDef.asm:19:1: kBaseSize_64x32 = 1
master.asm:20:1: DataBankStart = $818000
master.asm:42:1: gSharedRamStart = $001b
SNESDef.asm:18:1: kBaseSize_32x32 = 0
master.asm:59:5: ZPTemp6 = $0005
master.asm:58:5: ZPTemp5 = $0004
master.asm:57:5: ZPTemp4 = $0003
master.asm:56:5: ZPTemp3 = $0002
master.asm:55:5: ZPTemp2 = $0001
master.asm:54:5: ZPTemp1 = $0000
SNESDef.asm:13:1: kSPal_7 = 14
SNESDef.asm:12:1: kSPal_6 = 12
SNESDef.asm:11:1: kSPal_5 = 10
SNESDef.asm:10:1: kSPal_4 = 8
SNESDef.asm:9:1: kSPal_3 = 6
SNESDef.asm:8:1: kSPal_2 = 4
SNESDef.asm:7:1: kSPal_1 = 2
SNESDef.asm:6:1: kSPal_0 = 0
SNESDef.asm:4:1: kSPri_3 = 48
SNESDef.asm:3:1: kSPri_2 = 32
SNESDef.asm:2:1: kSPri_1 = 16
SNESDef.asm:1:1: kSPri_0 = 0
master.asm:122:9: HLWord.lo = 0
master.asm:123:9: HLWord.hi = 1
SNESDef.asm:21:1: kBaseSize_64x64 = 3
master.asm:140:9: HLBLong.hiWord = 1
master.asm:131:9: HLBLong.hi = 1
master.asm:139:9: HLBLong.dummy2 = 0
master.asm:130:9: HLBLong.lo = 0
master.asm:136:9: HLBLong.dummy1 = 2
master.asm:135:9: HLBLong.loWord = 0
master.asm:132:9: HLBLong.bank = 2
